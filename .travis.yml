language: cpp

compiler:
  - clang
  - gcc

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "YlZmQnVY0FCZ0jwXlHB/vqdfSFgHRyGWZej6oEC9YQyhXSiiz4C2zEVW6RuHQT6OPWsehDsjNFBBJyGsJIX8xp1Z5Y2n8YhVPsv6fLFiz0AF5WrJXhycC4Gz174CqPT6vSTZ42KmSrXqPE6fpH1mZNSFBwXrTmhwWcjLlbWvnmo="
  matrix:
    - QTVER=511
    - QTVER=521
    - QTVER=532
    - QTVER=541
    - QTVER=55

addons:
  coverity_scan:
    project:
      name: "pcolby/libqtaws"
      description: "Build submitted via Travis CI"
    notification_email: git@colby.id.au
    build_command_prepend: >
      cp -a "$TRAVIS_BUILD_DIR" "$TRAVIS_BUILD_DIR-scan" &&
      pushd "$TRAVIS_BUILD_DIR-scan" &&
      qmake -qt=qt5 -Wall -Wlogic -Wparser CONFIG+=debug_and_release
    build_command: make -j2 all
    branch_pattern: coverity

before_install:
  - sudo add-apt-repository -y ppa:beineri/opt-qt$QTVER
  - sudo apt-get -qy update

install:
  - export SHORT_VER=`echo $QTVER | cut -b1-2`; fi
  - sudo apt-get -qy install cppcheck doxygen graphviz lcov rubygems qt${SHORT_VER}base

before_script:
  - mkdir -p $TRAVIS_BUILD_DIR-build
  - if [ "$CXX" = "clang++" ]; then export QMAKESPEC=linux-clang; fi
  - pushd "$TRAVIS_BUILD_DIR-build"
  - . /opt/qt$SHORT_VER/bin/qt$SHORT_VER-env.sh
  - qmake -Wall -Wlogic -Wparser CONFIG+=debug_and_release "$TRAVIS_BUILD_DIR"
  - popd

script:
  - cppcheck --error-exitcode=1 --quiet
    --suppress=syntaxError:test/unit/src/core/testawsabstractresponse.cpp
    .
  - make -C "$TRAVIS_BUILD_DIR-build" -j2 all
  - make -C "$TRAVIS_BUILD_DIR-build" -j2 check TESTARGS=-silent

after_success:
  # Generate LCOV coverage reports
  - make -C "$TRAVIS_BUILD_DIR-build/test/unit/all" -j2 coverage
  - sed -i -e "s|^SF:/home/travis/build/libqtaws|SF:$TRAVIS_BUILD_DIR|"
    "$TRAVIS_BUILD_DIR-build/release/unit-test-all-tmp/coverage.info"
  # Report code coverage to coveralls.io
  - lcoveralls --retry-count 5
    "$TRAVIS_BUILD_DIR-build/release/unit-test-all-tmp/coverage.info"
  # Report code coverage to codecov.io
  - curl https://codecov.io/bash > /tmp/codecov.sh
  - bash /tmp/codecov.sh -f "$TRAVIS_BUILD_DIR-build/release/unit-test-all-tmp/coverage.info"
