/*
    Copyright 2013-2018 Paul Colby

    This file is part of libqtaws.

    Libqtaws is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Libqtaws is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with libqtaws.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "inspectorclient.h"
#include "inspectorclient_p.h"

#include "core/awssignaturev4.h"

#include <QNetworkAccessManager>
#include <QNetworkRequest>

namespace AWS {
namespace Inspector {

/**
 * @class  InspectorClient
 *
 * @brief  Client for Amazon Inspector
 *
 * <fullname>Amazon Inspector</fullname>
 *
 * Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues.
 * For more information, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html">
 * Amazon Inspector User
 */

/**
 * @brief  Constructs a new InspectorClient object.
 *
 * @param  region       AWS region for this client to service requests for.
 * @param  credentials  AWS credentials to use for signing requests.
 * @param  manager      Network access manager for sending requests.
 * @param  parent       This object's parent.
 */
InspectorClient::InspectorClient(
    const AwsRegion::Region region,
    AwsAbstractCredentials * credentials,
    QNetworkAccessManager * const manager,
    QObject * const parent)
: AwsAbstractClient(new InspectorClientPrivate(this), parent)
{
    Q_D(InspectorClient);
    d->region = region;
    d->credentials = credentials;
    d->networkAccessManager = manager;
    d->serviceName = QLatin1String("{{servicename}}");
}

/**
 * @brief  Constructs a new InspectorClient object.
 *
 * This overload allows the caller to specify the specific endpoint to send
 * requests to.  Typically, it is easier to use the alternative constructor,
 * which allows the caller to specify an AWS region instead, in which case this
 * client will determine the correct endpoint for the given region
 * automatically (via AwsEndpoint::getEndpoint).
 *
 * @param  endpoint     Endpoint for building requests URLs.
 * @param  credentials  AWS credentials to use for signing requests.
 * @param  manager      Network access manager for sending requests.
 * @param  parent       This object's parent.
 *
 * @see  AwsEndpoint::getEndpoint
 */
InspectorClient::InspectorClient(
    const QUrl &endpoint,
    AwsAbstractCredentials * credentials,
    QNetworkAccessManager * const manager,
    QObject * const parent)
: AwsAbstractClient(new InspectorClientPrivate(this), parent)
{
    Q_D(InspectorClient);
    d->endpoint = endpoint;
    d->credentials = credentials;
    d->networkAccessManager = manager;
    d->serviceName = QLatin1String("{{servicename}}");
}

/**
 * Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the
 */
AddAttributesToFindingsResponse * InspectorClient::addAttributesToFindings(const AddAttributesToFindingsRequest &request)
{

}

/**
 * Creates a new assessment target using the ARN of the resource group that is generated by <a>CreateResourceGroup</a>. If
 * the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t
 * already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services
 * needed to perform security assessments. You can create up to 50 assessment targets per AWS account. You can run up to
 * 500 concurrent agents per AWS account. For more information, see <a
 * href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html"> Amazon Inspector Assessment
 */
CreateAssessmentTargetResponse * InspectorClient::createAssessmentTarget(const CreateAssessmentTargetRequest &request)
{

}

/**
 * Creates an assessment template for the assessment target that is specified by the ARN of the assessment target. If the
 * <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t
 * already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services
 * needed to perform security
 */
CreateAssessmentTemplateResponse * InspectorClient::createAssessmentTemplate(const CreateAssessmentTemplateRequest &request)
{

}

/**
 * Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances
 * to be included in an Amazon Inspector assessment target. The created resource group is then used to create an Amazon
 * Inspector assessment target. For more information, see
 */
CreateResourceGroupResponse * InspectorClient::createResourceGroup(const CreateResourceGroupRequest &request)
{

}

/**
 * Deletes the assessment run that is specified by the ARN of the assessment
 */
DeleteAssessmentRunResponse * InspectorClient::deleteAssessmentRun(const DeleteAssessmentRunRequest &request)
{

}

/**
 * Deletes the assessment target that is specified by the ARN of the assessment
 */
DeleteAssessmentTargetResponse * InspectorClient::deleteAssessmentTarget(const DeleteAssessmentTargetRequest &request)
{

}

/**
 * Deletes the assessment template that is specified by the ARN of the assessment
 */
DeleteAssessmentTemplateResponse * InspectorClient::deleteAssessmentTemplate(const DeleteAssessmentTemplateRequest &request)
{

}

/**
 * Describes the assessment runs that are specified by the ARNs of the assessment
 */
DescribeAssessmentRunsResponse * InspectorClient::describeAssessmentRuns(const DescribeAssessmentRunsRequest &request)
{

}

/**
 * Describes the assessment targets that are specified by the ARNs of the assessment
 */
DescribeAssessmentTargetsResponse * InspectorClient::describeAssessmentTargets(const DescribeAssessmentTargetsRequest &request)
{

}

/**
 * Describes the assessment templates that are specified by the ARNs of the assessment
 */
DescribeAssessmentTemplatesResponse * InspectorClient::describeAssessmentTemplates(const DescribeAssessmentTemplatesRequest &request)
{

}

/**
 * Describes the IAM role that enables Amazon Inspector to access your AWS
 */
DescribeCrossAccountAccessRoleResponse * InspectorClient::describeCrossAccountAccessRole()
{

}

/**
 * Describes the findings that are specified by the ARNs of the
 */
DescribeFindingsResponse * InspectorClient::describeFindings(const DescribeFindingsRequest &request)
{

}

/**
 * Describes the resource groups that are specified by the ARNs of the resource
 */
DescribeResourceGroupsResponse * InspectorClient::describeResourceGroups(const DescribeResourceGroupsRequest &request)
{

}

/**
 * Describes the rules packages that are specified by the ARNs of the rules
 */
DescribeRulesPackagesResponse * InspectorClient::describeRulesPackages(const DescribeRulesPackagesRequest &request)
{

}

/**
 * Produces an assessment report that includes detailed and comprehensive results of a specified assessment run.
 */
GetAssessmentReportResponse * InspectorClient::getAssessmentReport(const GetAssessmentReportRequest &request)
{

}

/**
 * Information about the data that is collected for the specified assessment
 */
GetTelemetryMetadataResponse * InspectorClient::getTelemetryMetadata(const GetTelemetryMetadataRequest &request)
{

}

/**
 * Lists the agents of the assessment runs that are specified by the ARNs of the assessment
 */
ListAssessmentRunAgentsResponse * InspectorClient::listAssessmentRunAgents(const ListAssessmentRunAgentsRequest &request)
{

}

/**
 * Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment
 */
ListAssessmentRunsResponse * InspectorClient::listAssessmentRuns(const ListAssessmentRunsRequest &request)
{

}

/**
 * Lists the ARNs of the assessment targets within this AWS account. For more information about assessment targets, see <a
 * href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment
 */
ListAssessmentTargetsResponse * InspectorClient::listAssessmentTargets(const ListAssessmentTargetsRequest &request)
{

}

/**
 * Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the
 * assessment
 */
ListAssessmentTemplatesResponse * InspectorClient::listAssessmentTemplates(const ListAssessmentTemplatesRequest &request)
{

}

/**
 * Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template.
 * For more information, see <a>SubscribeToEvent</a> and
 */
ListEventSubscriptionsResponse * InspectorClient::listEventSubscriptions(const ListEventSubscriptionsRequest &request)
{

}

/**
 * Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment
 */
ListFindingsResponse * InspectorClient::listFindings(const ListFindingsRequest &request)
{

}

/**
 * Lists all available Amazon Inspector rules
 */
ListRulesPackagesResponse * InspectorClient::listRulesPackages(const ListRulesPackagesRequest &request)
{

}

/**
 * Lists all tags associated with an assessment
 */
ListTagsForResourceResponse * InspectorClient::listTagsForResource(const ListTagsForResourceRequest &request)
{

}

/**
 * Previews the agents installed on the EC2 instances that are part of the specified assessment
 */
PreviewAgentsResponse * InspectorClient::previewAgents(const PreviewAgentsRequest &request)
{

}

/**
 * Registers the IAM role that grants Amazon Inspector access to AWS Services needed to perform security
 */
RegisterCrossAccountAccessRoleResponse * InspectorClient::registerCrossAccountAccessRole(const RegisterCrossAccountAccessRoleRequest &request)
{

}

/**
 * Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where
 * an attribute with the specified key
 */
RemoveAttributesFromFindingsResponse * InspectorClient::removeAttributesFromFindings(const RemoveAttributesFromFindingsRequest &request)
{

}

/**
 * Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment
 */
SetTagsForResourceResponse * InspectorClient::setTagsForResource(const SetTagsForResourceRequest &request)
{

}

/**
 * Starts the assessment run specified by the ARN of the assessment template. For this API to function properly, you must
 * not exceed the limit of running up to 500 concurrent agents per AWS
 */
StartAssessmentRunResponse * InspectorClient::startAssessmentRun(const StartAssessmentRunRequest &request)
{

}

/**
 * Stops the assessment run that is specified by the ARN of the assessment
 */
StopAssessmentRunResponse * InspectorClient::stopAssessmentRun(const StopAssessmentRunRequest &request)
{

}

/**
 * Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a
 * specified SNS
 */
SubscribeToEventResponse * InspectorClient::subscribeToEvent(const SubscribeToEventRequest &request)
{

}

/**
 * Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a
 * specified SNS
 */
UnsubscribeFromEventResponse * InspectorClient::unsubscribeFromEvent(const UnsubscribeFromEventRequest &request)
{

}

/**
 * Updates the assessment target that is specified by the ARN of the assessment
 */
UpdateAssessmentTargetResponse * InspectorClient::updateAssessmentTarget(const UpdateAssessmentTargetRequest &request)
{

}

/**
 * @internal
 *
 * @class  InspectorClientPrivate
 *
 * @brief  Private implementation for InspectorClient.
 */

/**
 * @internal
 *
 * @brief  Constructs a new InspectorClientPrivate object.
 *
 * @param  q  Pointer to this object's public InspectorClient instance.
 */
InspectorClientPrivate::InspectorClientPrivate(InspectorClient * const q)
    : AwsAbstractClientPrivate(q)
{
    signature = new AwsSignatureV4();
}

} // namespace Inspector
} // namespace AWS
